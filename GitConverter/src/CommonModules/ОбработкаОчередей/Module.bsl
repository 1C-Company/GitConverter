///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2017-2018, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by-sa/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

// @strict-types

#Область ПрограммныйИнтерфейс


// Обработка очереди последовательно по версиям
// 
// Параметры:
// 	Очередь - СправочникСсылка.ОчередиВыполнения - ссылка на очередь выполнения
Процедура ОбработатьОчередь(Очередь) Экспорт
	
	РеквизитыОчереди = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Очередь, "Хранилище, Операция, МаксимальноеКоличествоОпераций, ПрефиксНачалаНомераВерсии, ПрефиксОкончанияНомераВерсии");
	
	Хранилище = РеквизитыОчереди.Хранилище;
	Если РеквизитыОчереди.Операция = Перечисления.ОперацииОчереди.ВыгрузкаКонфигурации Тогда
	
		Состояние = Перечисления.СостоянияВерсии.ВерсияПолучена;
		СостояниеВыполнения = Перечисления.СостоянияВерсии.ВыгрузкаВерсии;
	
	ИначеЕсли РеквизитыОчереди.Операция = Перечисления.ОперацииОчереди.ЗагрузкаМетаданных Тогда
	
		Состояние = Перечисления.СостоянияВерсии.ВерсияВыгружена;
		СостояниеВыполнения = Перечисления.СостоянияВерсии.ЗагрузкаМетаданных;
		
	КонецЕсли;
	
	МинимальнаяВерсия = 0;
	МаксимальнаяВерсия = 0;
	
	Если ЗначениеЗаполнено(Хранилище) Тогда
		
		МинимальнаяВерсия = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Хранилище, "ВерсияВGit.Код");
		Если МинимальнаяВерсия = null ИЛИ ТипЗнч(МинимальнаяВерсия) <> Тип("Число") Тогда
			МинимальнаяВерсия = 0;
		КонецЕсли;
		
		Если РеквизитыОчереди.ПрефиксОкончанияНомераВерсии > 0 Тогда
			МаксимальнаяВерсия = МинимальнаяВерсия + РеквизитыОчереди.ПрефиксОкончанияНомераВерсии;
		КонецЕсли;
		МинимальнаяВерсия = МинимальнаяВерсия + РеквизитыОчереди.ПрефиксНачалаНомераВерсии;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ВерсииХранилища.Ссылка,
	|	ХранилищаКонфигураций.МинимальноеКоличествоМетаданных КАК МинимальноеКоличествоМетаданных,
	|	ВерсииХранилища.ВыгрузкаИзменений
	|ИЗ
	|	Справочник.ВерсииХранилища КАК ВерсииХранилища
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХранилищаКонфигураций КАК ХранилищаКонфигураций
	|		ПО ВерсииХранилища.Владелец = ХранилищаКонфигураций.Ссылка
	|			И (ХранилищаКонфигураций.ОбрабатыватьВсеОчереди)
	|			И (ХранилищаКонфигураций.КонвертироватьВФорматEDT)
	|			И (НЕ ХранилищаКонфигураций.ЗапретитьИспользованиеОбщихОчередей 
	|				И &Хранилище = ЗНАЧЕНИЕ(Справочник.ХранилищаКонфигураций.ПустаяСсылка)
	|				ИЛИ ХранилищаКонфигураций.Ссылка = &Хранилище)
	|ГДЕ
	|	(ВерсииХранилища.Состояние = &Состояние
	|			ИЛИ (ВерсииХранилища.Источник = &Очередь
	|				ИЛИ ВерсииХранилища.Источник = НЕОПРЕДЕЛЕНО)
	|				И ВерсииХранилища.Состояние = &СостояниеВыполнения)
	|	И ХранилищаКонфигураций.ОбрабатыватьВсеОчереди
	|	И ВерсииХранилища.Код > &МинимальнаяВерсия
	|	И (ВерсииХранилища.Код < &МаксимальнаяВерсия
	|			ИЛИ &МаксимальнаяВерсия = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВерсииХранилища.ДатаСоздания,
	|	ХранилищаКонфигураций.Ссылка,
	|	ВерсииХранилища.Код";
	
	Запрос.УстановитьПараметр("Очередь", Очередь);
	Запрос.УстановитьПараметр("Состояние", Состояние);
	Запрос.УстановитьПараметр("СостояниеВыполнения", СостояниеВыполнения);
	Запрос.УстановитьПараметр("Хранилище", Хранилище);
	Запрос.УстановитьПараметр("МинимальнаяВерсия", МинимальнаяВерсия);
	Запрос.УстановитьПараметр("МаксимальнаяВерсия", МаксимальнаяВерсия);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "100", Формат(РеквизитыОчереди.МаксимальноеКоличествоОпераций + 10, "ЧДЦ=; ЧГ=0"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	КоличествоОпераций = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		КоличествоОпераций = КоличествоОпераций + 1;
		Если РеквизитыОчереди.МаксимальноеКоличествоОпераций > 0 И КоличествоОпераций > РеквизитыОчереди.МаксимальноеКоличествоОпераций Тогда
		
			Возврат;
		
		КонецЕсли; 
		
		ВерсияХранилища = ВыборкаДетальныеЗаписи.Ссылка;
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Справочник.ВерсииХранилища");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВерсияХранилища);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			ОбъектВерсии = ВерсияХранилища.ПолучитьОбъект();
			
			Если ЗначениеЗаполнено(ОбъектВерсии.Источник) И ОбъектВерсии.Источник <> Очередь Тогда
				ОтменитьТранзакцию();
				Продолжить;
			КонецЕсли; 
			
			Если ОбъектВерсии.Состояние = СостояниеВыполнения Тогда
				ОбъектВерсии.Состояние = Состояние;
			КонецЕсли; 
			ОбъектВерсии.Источник = Очередь;
			ОбъектВерсии.Записать();
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			Продолжить;
			
		КонецПопытки;
		
		ДлительныеОперации.СообщитьПрогресс(10, НСтр("ru = 'Обработка версии в очереди:'") + " " + КоличествоОпераций);
		
		Если РеквизитыОчереди.Операция = Перечисления.ОперацииОчереди.ВыгрузкаКонфигурации Тогда
			
			Попытка
			
				Параметры = КонвертацияХранилища.ПолучитьПараметрыОбработкиВерсии(ВерсияХранилища);
				КонвертацияХранилища.ВыгрузитьВерсию(ВерсияХранилища, Параметры);
			
			Исключение
				
				ОбъектВерсии = ВерсияХранилища.ПолучитьОбъект();
		
				ОбъектВерсии.Источник = Неопределено;
				ОбъектВерсии.Записать();
				Продолжить;
				
			КонецПопытки; 
			
		
		ИначеЕсли РеквизитыОчереди.Операция = Перечисления.ОперацииОчереди.ЗагрузкаМетаданных Тогда
		
			Параметры = КонвертацияХранилища.ПолучитьПараметрыОбработкиВерсии(ВерсияХранилища);
			КонвертацияХранилища.ЗагрузитьВерсию(ВерсияХранилища, Параметры);
		
		КонецЕсли;
		
		ОбъектВерсии = ВерсияХранилища.ПолучитьОбъект();
		
		ОбъектВерсии.Источник = Неопределено;
		
		Если НЕ ВыборкаДетальныеЗаписи.ВыгрузкаИзменений 
			И РеквизитыОчереди.Операция = Перечисления.ОперацииОчереди.ЗагрузкаМетаданных
			И ВыборкаДетальныеЗаписи.МинимальноеКоличествоМетаданных > 0
			И ОбъектВерсии.КоличествоМетаданных < ВыборкаДетальныеЗаписи.МинимальноеКоличествоМетаданных Тогда
		
			ОбъектВерсии.Состояние = Перечисления.СостоянияВерсии.ПустаяСсылка();
		
		КонецЕсли;
		
		ОбъектВерсии.Записать();

		РезультатЗапроса = Запрос.Выполнить();
	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
	КонецЦикла;
	
	
КонецПроцедуры


// Запускает фоновую операцию по версии
// 
// Параметры:
// 	Очередь - СправочникСсылка.ОчередиВыполнения - ссылка на очередь выполнения
Процедура ЗапуститьОбработкуОчередиВФоне(Очередь) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьОчередиВыполнения") Тогда
		Возврат;
	КонецЕсли;

	Отбор = Новый Структура();
	Отбор.Вставить("Состояние", СостояниеФоновогоЗадания.Активно);
	Отбор.Вставить("ИмяМетода", "ОбработкаОчередей.ОбработатьОчередь");

	МассивФоновыхЗаданий = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	Если МассивФоновыхЗаданий.Количество() > 50 Тогда
		Возврат;
	КонецЕсли;

	КлючЗадания = Строка(Очередь.УникальныйИдентификатор());

	Отбор = Новый Структура();
	Отбор.Вставить("Ключ", КлючЗадания);
	Отбор.Вставить("Состояние", СостояниеФоновогоЗадания.Активно);
	Отбор.Вставить("ИмяМетода", "ОбработкаОчередей.ОбработатьОчередь");

	МассивФоновыхЗаданий = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);

	Если МассивФоновыхЗаданий.Количество() > 0 Тогда
		Возврат;
	КонецЕсли;

	Наименование = НСтр("ru = 'Обработка очереди: %Очередь%'");
	Наименование = СтрЗаменить(Наименование, "%Очередь%", Строка(Очередь));

	Параметры = Новый Массив();
	Параметры.Добавить(Очередь);

	ФоновыеЗадания.Выполнить("ОбработкаОчередей.ОбработатьОчередь", Параметры, КлючЗадания, Лев(Наименование, 120));

КонецПроцедуры

#КонецОбласти
