///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2017-2018, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by-sa/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Наименование = Адрес;
	
	// Создание регламентного задания (получение уникального идентификатора)
	УстановитьПривилегированныйРежим(Истина);
	
	Задание = РегламентныеЗаданияСервер.Задание(РегламентноеЗадание);
	Если Задание = Неопределено Тогда
		
		ПараметрыЗадания = Новый Структура;
		ПараметрыЗадания.Вставить("Метаданные",    Метаданные.РегламентныеЗадания.ВыгрузкаВерсииИзКопииХранилища);
		ПараметрыЗадания.Вставить("Использование", Ложь);
		ПараметрыЗадания.Вставить("Расписание",    Новый РасписаниеРегламентногоЗадания);
		ПараметрыЗадания.Вставить("Наименование",  НСтр("ru = 'Выгрузка версий из копии'") + ": " + СокрЛП(Наименование));
		Задание = РегламентныеЗаданияСервер.ДобавитьЗадание(ПараметрыЗадания);
		
		РегламентноеЗадание = РегламентныеЗаданияСервер.УникальныйИдентификатор(Задание);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КаталогВыгрузкиВерсий) Тогда
	
		КаталогВыгрузкиВерсий = СокрЛП(КаталогВыгрузкиВерсий);
	
	КонецЕсли; 
	
	ДополнительныеСвойства.Вставить("Задание",Задание);
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	РегламентноеЗадание = Неопределено;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	РегламентныеЗаданияСервер.УдалитьЗадание(РегламентноеЗадание);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если Отказ ИЛИ ОбменДанными.Загрузка ИЛИ ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("Задание") Тогда
		Задание = ДополнительныеСвойства.Задание;
		Если Задание = Неопределено Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	ПараметрыЗадания = Новый Структура;
	
	// Расписание устанавливается в форме элемента
	Если ДополнительныеСвойства.Свойство("Расписание") 
			И ТипЗнч(ДополнительныеСвойства.Расписание) = Тип("РасписаниеРегламентногоЗадания")
			И Строка(ДополнительныеСвойства.Расписание) <> Строка(Задание.Расписание) Тогда
		ПараметрыЗадания.Вставить("Расписание", ДополнительныеСвойства.Расписание);
	КонецЕсли;
	
	// Использование устанавливается в форме элемента
	Если ПометкаУдаления И Задание.Использование Тогда
		
		ПараметрыЗадания.Вставить("Использование", Ложь);
		
	ИначеЕсли ДополнительныеСвойства.Свойство("Использование") 
			И ДополнительныеСвойства.Использование <> Задание.Использование Тогда
		
		ПараметрыЗадания.Вставить("Использование", ДополнительныеСвойства.Использование);
		
	КонецЕсли;
	НаименованиеЗадания = НСтр("ru = 'Выгрузка версий из копии'") + ": ";
	
	НаименованиеЗадания = НаименованиеЗадания + СокрЛП(Наименование);
	ПараметрыЗадания.Вставить("Наименование", НаименованиеЗадания);
	ПараметрыЗадания.Вставить("Ключ", Строка(Ссылка.УникальныйИдентификатор()));
	
	Если Задание.Параметры.Количество() <> 1 ИЛИ Задание.Параметры[0] <> Ссылка Тогда
		МассивПараметров = Новый Массив;
		МассивПараметров.Добавить(Ссылка);
		ПараметрыЗадания.Вставить("Параметры", МассивПараметров);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	РегламентныеЗаданияСервер.ИзменитьЗадание(РегламентноеЗадание, ПараметрыЗадания);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли