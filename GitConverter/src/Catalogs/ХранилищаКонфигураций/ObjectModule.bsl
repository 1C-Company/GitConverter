///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2017-2019, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by-sa/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
		
	Если ОбменДанными.Загрузка ИЛИ Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Наименование) Тогда
		Наименование = Адрес;
	КонецЕсли;
	
	Если Не КонвертироватьВФорматEDT Тогда
		ДобавлятьМеткиСВерсиейКонфигурации = Ложь;
		ДополнительныеСвойства.Вставить("Использование", Ложь);
		ВыполнятьКоммиты = Ложь;
		ОбрабатыватьВсеОчереди = Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТипХранилища) Тогда
		ТипХранилища = Перечисления.ТипыХранилищаКонфигураций.Конфигурация;
	КонецЕсли;
	
	// Создание регламентного задания (получение уникального идентификатора)
	УстановитьПривилегированныйРежим(Истина);
	
	Задание = РегламентныеЗаданияСервер.Задание(РегламентноеЗадание);
	Если Задание = Неопределено
		И ДополнительныеСвойства.Свойство("Использование")
		И ДополнительныеСвойства.Использование Тогда
		
		ПараметрыЗадания = Новый Структура;
		ПараметрыЗадания.Вставить("Метаданные", Метаданные.РегламентныеЗадания.КонвертацияХранилища);
		ПараметрыЗадания.Вставить("Использование", Ложь);
		ПараметрыЗадания.Вставить("Расписание", Новый РасписаниеРегламентногоЗадания);
		ПараметрыЗадания.Вставить("Наименование", НСтр("ru = 'Конвертация хранилища'") + ": " + СокрЛП(Адрес));
		Задание = РегламентныеЗаданияСервер.ДобавитьЗадание(ПараметрыЗадания);
		
		РегламентноеЗадание = РегламентныеЗаданияСервер.УникальныйИдентификатор(Задание);
		
	КонецЕсли;
	
	Адрес = СокрЛП(Адрес);
	ВерсияПлатформы = СокрЛП(ВерсияПлатформы);
	ИмяПользователяХранилища = СокрЛП(ИмяПользователяХранилища);
	КаталогВыгрузкиВерсий = СокрЛП(КаталогВыгрузкиВерсий);
	ЛокальныйКаталогGit = СокрЛП(ЛокальныйКаталогGit);
	ИмяВетки = СокрЛП(ИмяВетки);
	АдресРепозиторияGit = СокрЛП(АдресРепозиторияGit);
	ПользовательСервераGit = СокрЛП(ПользовательСервераGit);
	ИмяПроектаEDT = СокрЛП(ИмяПроектаEDT);
	
	Если НЕ ПустаяСтрока(ИмяПроектаEDT) Тогда
		ПервыйСимвол = Лев(ИмяПроектаEDT, 1);
		Если ПервыйСимвол = "\" ИЛИ ПервыйСимвол = "/" Тогда
			ИмяПроектаEDT = Сред(ИмяПроектаEDT, 2);
		КонецЕсли;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("Задание",Задание);
	УстановитьПривилегированныйРежим(Ложь);
	
	
	Если ВыгружатьИзменения И
		(НЕ ПолучитьФункциональнуюОпцию("ИспользоватьОчередиВыполнения") 
		И НЕ ЭтоВерсияПлатформы8315ИлиВыше(ВерсияПлатформы)
		ИЛИ ОбщегоНазначенияКлиентСервер.СравнитьВерсии(ВерсияПлатформы, "8.3.10.0") < 1) Тогда
		ВыгружатьИзменения = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если Отказ ИЛИ ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("Задание") Тогда
		Задание = ДополнительныеСвойства.Задание;
		Если Задание = Неопределено Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	ПараметрыЗадания = Новый Структура;
	
	// Расписание устанавливается в форме элемента
	Если ДополнительныеСвойства.Свойство("Расписание") 
			И ТипЗнч(ДополнительныеСвойства.Расписание) = Тип("РасписаниеРегламентногоЗадания")
			И Строка(ДополнительныеСвойства.Расписание) <> Строка(Задание.Расписание) Тогда
		ПараметрыЗадания.Вставить("Расписание", ДополнительныеСвойства.Расписание);
	КонецЕсли;
	
	// Использование устанавливается в форме элемента
	Если ПометкаУдаления И Задание.Использование Тогда
		
		ПараметрыЗадания.Вставить("Использование", Ложь);
		
	ИначеЕсли ДополнительныеСвойства.Свойство("Использование") 
			И ДополнительныеСвойства.Использование <> Задание.Использование Тогда
		
		ПараметрыЗадания.Вставить("Использование", ДополнительныеСвойства.Использование);
		
	КонецЕсли;
	НаименованиеЗадания = НСтр("ru = 'Конвертация хранилища'") + ": ";
	
	НаименованиеЗадания = НаименованиеЗадания + СокрЛП(Адрес);
	ПараметрыЗадания.Вставить("Наименование", НаименованиеЗадания);
	ПараметрыЗадания.Вставить("Ключ", Строка(Ссылка.УникальныйИдентификатор()));
	
	Если Задание.Параметры.Количество() <> 1 ИЛИ Задание.Параметры[0] <> Ссылка Тогда
		МассивПараметров = Новый Массив;
		МассивПараметров.Добавить(Ссылка);
		ПараметрыЗадания.Вставить("Параметры", МассивПараметров);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	РегламентныеЗаданияСервер.ИзменитьЗадание(РегламентноеЗадание, ПараметрыЗадания);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	РегламентноеЗадание = Неопределено;
	ВерсияВGit = Неопределено;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	РегламентныеЗаданияСервер.УдалитьЗадание(РегламентноеЗадание);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНеПроверяемыхРеквизитов = Новый Массив;
	
	Если НЕ ЗначениеЗаполнено(АдресРепозиторияGit) ИЛИ НЕ ЭтоHTTPАдрес(АдресРепозиторияGit) Тогда
	
		МассивНеПроверяемыхРеквизитов.Добавить("ПользовательСервераGit");
		МассивНеПроверяемыхРеквизитов.Добавить("ПарольСервераGit");
	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВерсияПлатформы) Тогда
		Сегменты = СтрРазделить(ВерсияПлатформы, ".");
		
		Если Сегменты.Количество() <> 4 Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'Версия должна быть в формате Х.Х.Х.Х'");
			Сообщение.Поле = "ВерсияПлатформы";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ВыгружатьИзменения 
		И ОбщегоНазначенияКлиентСервер.СравнитьВерсии(ВерсияПлатформы, "8.3.10.0") > 0
		И НЕ ЭтоВерсияПлатформы8315ИлиВыше(ВерсияПлатформы)
		И НЕ ПолучитьФункциональнуюОпцию("ИспользоватьОчередиВыполнения") Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Выгрузка изменений доступна при вклченой опции ""Очереди выполнения""'");
		Сообщение.Поле = "ВыгружатьИзменения";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Если Не КонвертироватьВФорматEDT И ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВерсийEDT") Тогда
		МассивНеПроверяемыхРеквизитов.Добавить("ВерсияEDT");
	КонецЕсли;
	
	Если ТипХранилища = Перечисления.ТипыХранилищаКонфигураций.Конфигурация Тогда
		МассивНеПроверяемыхРеквизитов.Добавить("БазовыйПроект");
		МассивНеПроверяемыхРеквизитов.Добавить("ИмяРасширения");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНеПроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЭтоHTTPАдрес(Адрес)
	
	Возврат СтрНачинаетсяС(Адрес, "http://") ИЛИ СтрНачинаетсяС(Адрес, "https://");
	
КонецФункции

Функция ЭтоВерсияПлатформы8315ИлиВыше(Знач ВерсияПлатформы)
	
	Возврат ОбщегоНазначенияКлиентСервер.СравнитьВерсии(ВерсияПлатформы, "8.3.15.0") > 0;
	
КонецФункции

#КонецОбласти

#КонецЕсли