///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2017-2018, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by-sa/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает структуру последней версии хранилища
// 
// Параметры:
// 	Хранилище - СправочникСсылка.ХранилищаКонфигураций -  ссылка на хранилище
// Возвращаемое значение:
// 	Структура - номер последней версии и ссылка на версию
Функция ПоследняяВерсияХранилища(Знач Хранилище) Экспорт 
	
	Результат = Новый Структура("Версия, Ссылка", 0, Неопределено);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Версия КАК Версия,
	|	ЕСТЬNULL(ВерсииХранилища.Ссылка, ЗНАЧЕНИЕ(Справочник.ВерсииХранилища.ПустаяСсылка)) КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСТЬNULL(МАКСИМУМ(ВерсииХранилища.Код), 0) КАК Версия
	|	ИЗ
	|		Справочник.ВерсииХранилища КАК ВерсииХранилища
	|	ГДЕ
	|		ВерсииХранилища.Владелец = &Хранилище) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВерсииХранилища КАК ВерсииХранилища
	|		ПО ВложенныйЗапрос.Версия = ВерсииХранилища.Код
	|			И (ВерсииХранилища.Владелец = &Хранилище)";
	
	Запрос.УстановитьПараметр("Хранилище", Хранилище);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Результат, ВыборкаДетальныеЗаписи);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Загрузить версию отчета из файла
// 
// Параметры:
// 	Хранилище - СправочникСсылка.ХранилищаКонфигураций - ссылка на хранилище
// 	ИмяФайлаОтчета - Строка - Имя файла отчета
Процедура ЗагрузитьВерсииИзОтчета(Знач Хранилище, ИмяФайлаОтчета) Экспорт 
	
	Файл = Новый Файл(ИмяФайлаОтчета);
	Если НЕ Файл.Существует() Тогда
		Возврат;
	КонецЕсли;
	
	Отчет = Новый  ТабличныйДокумент;
	Отчет.Прочитать(ИмяФайлаОтчета);
	
	ВерсииХранилища = Новый Массив;
	
	ПоляВерсии = Новый Соответствие;
	ПоляВерсии.Вставить("Версия:", "Версия");
	ПоляВерсии.Вставить("Дата создания:", "ДатаСоздания");
	ПоляВерсии.Вставить("Время создания:", "ВремяСоздания");
	ПоляВерсии.Вставить("Пользователь:", "Пользователь");
	ПоляВерсии.Вставить("Комментарий:", "Комментарий");
	ПоляВерсии.Вставить("Добавлены:", "Добавлены");
	ПоляВерсии.Вставить("Изменены:", "Изменены");
	ПоляВерсии.Вставить("Удалены:", "Удалены");
	ПоляВерсии.Вставить("Version:", "Версия");
	ПоляВерсии.Вставить("Creation date:", "ДатаСоздания");
	ПоляВерсии.Вставить("Creation time:", "ВремяСоздания");
	ПоляВерсии.Вставить("User:", "Пользователь");
	ПоляВерсии.Вставить("Comment:", "Комментарий");
	ПоляВерсии.Вставить("Added:", "Добавлены");
	ПоляВерсии.Вставить("Changed:", "Изменены");
	ПоляВерсии.Вставить("Deleted:", "Удалены");
	
	КолонкаПоиска = Отчет.Область("C1");
	ОбластьСтроки = Неопределено;
	ОбластьСтроки = Отчет.НайтиТекст("Версия:", ОбластьСтроки, КолонкаПоиска, Ложь, Истина, Истина, Истина);
	Если ОбластьСтроки = Неопределено Тогда
		ОбластьСтроки = Отчет.НайтиТекст("Version:", ОбластьСтроки, КолонкаПоиска, Ложь, Истина, Истина, Истина);
	КонецЕсли;
	Пока ОбластьСтроки <> Неопределено Цикл
		
		ВерсияХранилища = Новый Структура("Версия, ДатаСоздания, ВремяСоздания, Пользователь, Комментарий, Добавлены, Изменены, Удалены", "", "", "", "", "", Новый Массив, Новый Массив, Новый Массив);
		
		СтрокаНачалаВерсии = ОбластьСтроки.Верх;
		ОбластьСтрокиНаРусском = Отчет.НайтиТекст("Версия:", ОбластьСтроки, КолонкаПоиска, Ложь, Истина, Истина, Истина);
		Если ОбластьСтрокиНаРусском = Неопределено Тогда
			ОбластьСтроки = Отчет.НайтиТекст("Version:", ОбластьСтроки, КолонкаПоиска, Ложь, Истина, Истина, Истина);
		Иначе
			ОбластьСтроки = ОбластьСтрокиНаРусском;
		КонецЕсли;
		Если ОбластьСтроки = Неопределено Тогда
			
			// Это последняя версия в файле, получаем конец документа
			СтрокаОкончанияВерсии = Отчет.ВысотаТаблицы;
		
		Иначе
		
			СтрокаОкончанияВерсии = ОбластьСтроки.Верх-1;
		
		КонецЕсли; 
		
		ИмяТекущегоМассиваСтрок = "";
		
		Пока СтрокаНачалаВерсии <= СтрокаОкончанияВерсии Цикл
			
			Имя = "R"+Формат(СтрокаНачалаВерсии, "ЧДЦ=; ЧГ=0") + "C1";
			Ключ = ПоляВерсии.Получить(Отчет.Область(Имя).Текст);
			Имя = "R"+Формат(СтрокаНачалаВерсии, "ЧДЦ=; ЧГ=0") + "C2";
			Значение = Отчет.Область(Имя).Текст;
			Если ЗначениеЗаполнено(Значение) Тогда
				Если Ключ = Неопределено Тогда
					
					Если ЗначениеЗаполнено(ИмяТекущегоМассиваСтрок) И ЗначениеЗаполнено(Значение) Тогда
						ВерсияХранилища[ИмяТекущегоМассиваСтрок].Добавить(Значение);
					КонецЕсли; 
				Иначе
					Если ТипЗнч(ВерсияХранилища[Ключ]) = Тип("Массив") Тогда
						ИмяТекущегоМассиваСтрок = Ключ;
						ВерсияХранилища[ИмяТекущегоМассиваСтрок].Добавить(Значение);
					Иначе
						ВерсияХранилища[Ключ] = Значение;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли; 
			
			СтрокаНачалаВерсии = СтрокаНачалаВерсии + 1;
		
		КонецЦикла; 
		
		ВерсииХранилища.Добавить(ВерсияХранилища);
		
	КонецЦикла;
	
	// Сохраняем версии
	Если ВерсииХранилища.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Если в отчете есть пустые пользователи - не загружаем
	Для Каждого ВерсияХранилища Из ВерсииХранилища Цикл
		Если Не ЗначениеЗаполнено(ВерсияХранилища.Пользователь) Тогда

			ЗаписьЖурналаРегистрации(НСтр("ru = 'Некорректный отчет из хранилища'", Метаданные.ОсновнойЯзык.КодЯзыка), 
			                         УровеньЖурналаРегистрации.Ошибка,
			                         ,
			                         ,
			                         ЗначениеВСтрокуВнутр(Отчет));						
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	МассивКодов = Новый Массив;
	Для каждого ВерсияХранилища Из ВерсииХранилища Цикл
		Версия = Число(ВерсияХранилища.Версия);
		Если Версия = 0 Тогда
			Продолжить;
		КонецЕсли; 
		МассивКодов.Добавить(Версия);
	
	КонецЦикла;
	
	Если МассивКодов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	НачатьТранзакцию();
	
	Попытка
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Справочник.ВерсииХранилища");
		ЭлементБлокировки.УстановитьЗначение("Владелец", Хранилище);
		Блокировка.Заблокировать();
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВерсииХранилища.Ссылка,
		|	ВерсииХранилища.Код
		|ИЗ
		|	Справочник.ВерсииХранилища КАК ВерсииХранилища
		|ГДЕ
		|	ВерсииХранилища.Владелец = &Хранилище
		|	И ВерсииХранилища.Код В(&Коды)";
		
		Запрос.УстановитьПараметр("Коды", МассивКодов);
		Запрос.УстановитьПараметр("Хранилище", Хранилище);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ТаблицаВерсий = РезультатЗапроса.Выгрузить();
		ТаблицаВерсий.Индексы.Добавить("Код");
		
		Для каждого ВерсияХранилища Из ВерсииХранилища Цикл
			Версия = Число(ВерсияХранилища.Версия);
			Если Версия = 0 Тогда
				Продолжить;
			КонецЕсли; 
			НайденнаяСтрока = ТаблицаВерсий.Найти(Версия, "Код");
			Если НайденнаяСтрока = Неопределено Тогда
				
				Объект = Справочники.ВерсииХранилища.СоздатьЭлемент();
				
			Иначе
				
				Объект = НайденнаяСтрока.Ссылка.ПолучитьОбъект();
				
			КонецЕсли; 
			
			Объект.Владелец = Хранилище;
			Объект.Код = Версия;
			
			Попытка
				ВремяСоздания = СтрЗаменить(ВерсияХранилища.ВремяСоздания, ":", "");
				Если СтрДлина(ВремяСоздания) = 5 Тогда
					ВремяСоздания = "0" + ВремяСоздания;
				КонецЕсли; 
				Объект.ДатаСоздания = Дата(Прав(СокрЛП(ВерсияХранилища.ДатаСоздания), 4) + Сред(ВерсияХранилища.ДатаСоздания,4,2) + Лев(ВерсияХранилища.ДатаСоздания, 2) + ВремяСоздания);
			Исключение
				
			КонецПопытки; 
			
			Объект.Пользователь = ВерсияХранилища.Пользователь;
			Объект.Комментарий  = ВерсияХранилища.Комментарий;
			
			Объект.Состав.Очистить();
			Для каждого ОбъектМетаданных Из ВерсияХранилища.Добавлены Цикл
				
				НоваяСтрока = Объект.Состав.Добавить();
				НоваяСтрока.Тип = "Добавлено";
				НоваяСтрока.ОбъектМетаданных = ОбъектМетаданных;
				
			КонецЦикла;
			Для каждого ОбъектМетаданных Из ВерсияХранилища.Изменены Цикл
				
				НоваяСтрока = Объект.Состав.Добавить();
				НоваяСтрока.Тип = "Изменено";
				НоваяСтрока.ОбъектМетаданных = ОбъектМетаданных;
				
			КонецЦикла;
			Для каждого ОбъектМетаданных Из ВерсияХранилища.Удалены Цикл
				
				НоваяСтрока = Объект.Состав.Добавить();
				НоваяСтрока.Тип = "Удалено";
				НоваяСтрока.ОбъектМетаданных = ОбъектМетаданных;
				
			КонецЦикла;
			Объект.Записать();
			
		КонецЦикла; 
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		
		ТекстОшибки = ОписаниеОшибки();
		
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Загрузка версий хранилища конфигурации'", Метаданные.ОсновнойЯзык.КодЯзыка),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.ХранилищаКонфигураций,
			Хранилище,
			ТекстОшибки);
			
		ВызватьИсключение ТекстОшибки;
	КонецПопытки; 
	
КонецПроцедуры

// Устанавливает новое состояние для версии хранилища
// Параметры:
//   ВерсияХранилища - СправочникСсылка.ВерсииХранилища - Ссылка на версию
//   Состояние - ПеречислениеСсылка.СостоянияВерсии - новое состояние версии
Процедура УстановитьСостояние(Знач ВерсияХранилища, Знач Состояние) Экспорт
	
	Объект = ВерсияХранилища.ПолучитьОбъект();
	
	Если Объект <> Неопределено И Объект.Состояние <> Состояние Тогда
		Объект.Состояние = Состояние;
		Объект.Записать();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли